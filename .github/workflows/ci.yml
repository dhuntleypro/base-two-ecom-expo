name: Build and Deploy iOS App

on:
  push:
    branches:
      - main

jobs:

  # Add secrets
  add_secrets:
    runs-on: macos-latest
    
    steps:
      - name: Add GitHub Secrets 1
        env:
          GH_TOKEN: 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
          SECRET_VALUE: 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
        run: |
          gh secret set GIT_TOKEN -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
      
      - name: Add GitHub Secrets 1
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APP_STORE_CONNECT_API_KEY_KEY_ID
        run: |
          gh secret set APP_STORE_CONNECT_API_KEY_KEY_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
      
      - name: Add GitHub Secrets 2
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APP_STORE_CONNECT_API_KEY_ISSUER_ID
        run: | 
          gh secret set APP_STORE_CONNECT_API_KEY_ISSUER_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
      
      - name: Add GitHub Secrets 3
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APP_STORE_CONNECT_P8_BASE64
        run: |
          gh secret set APP_STORE_CONNECT_P8_BASE64 -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
      
      - name: Add GitHub Secrets 4
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $FASTLANE_USER
        run: |
          gh secret set FASTLANE_USER -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
      
      - name: Add FASTLANE_PASSWORD as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $FASTLANE_PASSWORD
        run: |
          gh secret set FASTLANE_PASSWORD -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add APPLE_ID as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APPLE_ID
        run: |
          gh secret set APPLE_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add APP_IDENTIFIER as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APP_IDENTIFIER
        run: |
          gh secret set APP_IDENTIFIER -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add TEAM_ID as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $TEAM_ID
        run: |
          gh secret set TEAM_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add APP_STORE_CONNECT_API_KEY_ID as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APP_STORE_CONNECT_API_KEY_ID
        run: |
          gh secret set APP_STORE_CONNECT_API_KEY_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add APP_STORE_CONNECT_API_ISSUER_ID as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APP_STORE_CONNECT_API_ISSUER_ID
        run: |
          gh secret set APP_STORE_CONNECT_API_ISSUER_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add APP_STORE_CONNECT_API_KEY_PATH as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $APP_STORE_CONNECT_API_KEY_PATH
        run: |
          gh secret set APP_STORE_CONNECT_API_KEY_PATH -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add MATCH_GIT_URL as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $MATCH_GIT_URL
        run: |
          gh secret set MATCH_GIT_URL -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add MATCH_PASSWORD as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $MATCH_PASSWORD
        run: |
          gh secret set MATCH_PASSWORD -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

      - name: Add SSH_PRIVATE_KEY as GitHub Secret
        env:
          GH_TOKEN: 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
          SECRET_VALUE: $SSH_PRIVATE_KEY
        run: |
          gh secret set SSH_PRIVATE_KEY -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

  build:
    runs-on: macos-latest
    needs: add_secrets
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Decrypt .env.secrets file
      run: |
        openssl aes-256-cbc -d -in .env.secrets.enc -out .env.secrets -pass pass:${{ secrets.SECRET_PASSPHRASE }}

    - name: Load .env.secrets
      run: source .env.secrets

    - name: Decode and Decrypt SSH Key
      run: |
        echo "$SSH_PRIVATE_KEY_ENC" | base64 -d > id_rsa.enc
        openssl aes-256-cbc -d -in id_rsa.enc -out ~/.ssh/id_rsa -pass pass:${{ secrets.SECRET_PASSPHRASE }}
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7'

    - name: Install Fastlane
      run: |
        gem install bundler
        bundle install
    
    - name: Install dependencies
      run: npm run start-project
    
    - name: Install Expo CLI
      run: npm install -g expo-cli

    - name: Log in to Expo
      run: expo login --username ${{ secrets.EXPO_USERNAME }} --password ${{ secrets.EXPO_PASSWORD }}

    - name: Setup Fastlane and CocoaPods
      run: |
        brew install cocoapods
        bundle exec pod install --project-directory=ios

    - name: Set up SSH key for match
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Set up Match signing certificates
      run: bundle exec fastlane ios setup_signing
      env:
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        GIT_SSH_COMMAND: "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no"

    - name: Build and deploy to the App Store
      run: bundle exec fastlane ios deploy_all
      env:
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_PATH: ${{ secrets.APP_STORE_CONNECT_API_KEY_PATH }}
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
        TEAM_ID: ${{ secrets.TEAM_ID }}
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}




# add GIT_TOKEN to server to add to repo









# name: Build and Deploy iOS App

# on:
#   push:
#     branches:
#       - main

# jobs:
#   add_main:
#     runs-on: macos-latest
    
#     steps:
#       - name: Add GitHub Secrets 1
#         env:
#           GH_TOKEN: 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
#           SECRET_VALUE: $GIT_TOKEN
#         run: |
#           gh secret set GIT_TOKEN -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
      
#   add_secrets:
#     runs-on: macos-latest
    
#     steps:
#       - name: Add GitHub Secrets 1
#         env:
#           GH_TOKEN: ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $FASTLANE_USER
#         run: |
#           gh secret set FASTLANE_USER -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
    
#       - name: Add GitHub Secrets 5
#         env:
#           GH_TOKEN: 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
#           SECRET_VALUE: $FASTLANE_PASSWORD
#         run: |
#           gh secret set FASTLANE_PASSWORD -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
      
#       - name: Add GitHub Secrets 2
#         env:
#           GH_TOKEN: ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $APPLE_ID
#         run: | 
#           gh secret set APPLE_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
      
#       - name: Add GitHub Secrets 3
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $APP_IDENTIFIER
#         run: |
#           gh secret set APP_IDENTIFIER -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
      
#       - name: Add GitHub Secrets 4
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $TEAM_ID
#         run: |
#           gh secret set TEAM_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
      
#       - name: Add GitHub Secrets 5
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $APP_STORE_CONNECT_API_KEY_ID
#         run: |
#           gh secret set APP_STORE_CONNECT_API_KEY_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY 
      
#       - name: Add GitHub Secrets 6
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $APP_STORE_CONNECT_API_ISSUER_ID
#         run: |
#           gh secret set APP_STORE_CONNECT_API_ISSUER_ID -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
      
#       - name: Add GitHub Secrets 7
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $APP_STORE_CONNECT_API_KEY_PATH
#         run: |
#           gh secret set APP_STORE_CONNECT_API_KEY_PATH -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
  
#       - name: Add GitHub Secrets 8
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $MATCH_GIT_URL
#         run: |
#           gh secret set MATCH_GIT_URL -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
      
#       - name: Add GitHub Secrets 9
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $MATCH_PASSWORD
#         run: |
#           gh secret set MATCH_PASSWORD -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY
      
#       - name: Add GitHub Secrets 10
#         env:
#           GH_TOKEN:  ${{ secrets.GIT_TOKEN }} 
#           SECRET_VALUE: $SSH_PRIVATE_KEY
#         run: |
#           gh secret set SSH_PRIVATE_KEY -b "$SECRET_VALUE" -R $GITHUB_REPOSITORY

#   login:
#     runs-on: macos-latest
#     needs: add_secrets
#     steps:
#       - name: Authenticate GitHub CLI
#         run: |
#           echo ${{ secrets.GIT_TOKEN }} | gh auth login --with-token


#   build:
#     runs-on: macos-latest
#     needs: login
#     steps:
#     - name: Checkout the code
#       uses: actions/checkout@v2

#       # Decrypt the .env.secrets file using the passphrase stored in GitHub Secrets
#     - name: Decrypt .env.secrets file
#       run: |
#         openssl aes-256-cbc -d -in .env.secrets.enc -out .env.secrets -pass pass:${{ secrets.SECRET_PASSPHRASE }}

#     # Load the decrypted secrets into the environment
#     - name: Load .env.secrets
#       run: source .env.secrets

#     # Decode and decrypt the SSH private key
#     - name: Decode and Decrypt SSH Key
#       run: |
#         echo "$SSH_PRIVATE_KEY_ENC" | base64 -d > id_rsa.enc
#         openssl aes-256-cbc -d -in id_rsa.enc -out ~/.ssh/id_rsa -pass pass:${{ secrets.SECRET_PASSPHRASE }}
#         chmod 600 ~/.ssh/id_rsa
#         ssh-keyscan github.com >> ~/.ssh/known_hosts

#     - name: Install Ruby
#       uses: ruby/setup-ruby@v1
#       with:
#         ruby-version: '2.7'

#     - name: Install Fastlane
#       run: |
#         gem install bundler
#         bundle install
    
#     - name: Install dependencies
#       run: npm run start-project
    
#     - name: Install Expo CLI
#       run: npm install -g expo-cli

#     - name: Log in to Expo
#       run: expo login --username ${{ secrets.EXPO_USERNAME }} --password ${{ secrets.EXPO_PASSWORD }}

#     - name: Install Fastlane
#       run: bundle install

#     - name: Authenticate GitHub CLI
#       run: echo ${{ secrets.GIT_TOKEN }} | gh auth login --with-token


#     - name: Setup Fastlane and CocoaPods
#       run: |
#         brew install cocoapods
#         bundle exec pod install --project-directory=ios
#     - name: Set up SSH key for match
#       run: |
#         mkdir -p ~/.ssh
#         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#         chmod 600 ~/.ssh/id_rsa
#         ssh-keyscan github.com >> ~/.ssh/known_hosts

#     - name: Set up Match signing certificates
#       run: bundle exec fastlane ios setup_signing
#       env:
#         FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
#         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
#         GIT_SSH_COMMAND: "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no"

#     - name: Build and deploy to the App Store
#       run: bundle exec fastlane ios deploy_all
#       env:
#         FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
#         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
#         APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
#         APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
#         APP_STORE_CONNECT_API_KEY_PATH: ${{ secrets.APP_STORE_CONNECT_API_KEY_PATH }}
#         APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
#         TEAM_ID: ${{ secrets.TEAM_ID }}
#         MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}


# # delete env when done ??